/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/

var E=Object.defineProperty;var L=Object.getOwnPropertyDescriptor;var R=Object.getOwnPropertyNames;var M=Object.prototype.hasOwnProperty;var D=(v,C)=>{for(var e in C)E(v,e,{get:C[e],enumerable:!0})},H=(v,C,e,l)=>{if(C&&typeof C=="object"||typeof C=="function")for(let u of R(C))!M.call(v,u)&&u!==e&&E(v,u,{get:()=>C[u],enumerable:!(l=L(C,u))||l.enumerable});return v};var N=v=>H(E({},"__esModule",{value:!0}),v);var $={};D($,{default:()=>w});module.exports=N($);var p=require("obsidian"),T=require("@codemirror/view"),b={tooltipTextColor:"var(--text-normal)",tooltipBackgroundColor:"var(--background-primary)",tooltipBorderColor:"var(--background-modifier-border)",boldTextColor:"var(--bold-color)"},w=class extends p.Plugin{async onload(){await this.loadSettings(),this.addSettingTab(new k(this.app,this)),this.registerMarkdownPostProcessor((e,l)=>{let u=document.createTreeWalker(e,NodeFilter.SHOW_TEXT,null),r=[],m;for(;m=u.nextNode();)r.push(m);r.forEach(o=>{let t=o.textContent;if(!t)return;let s=/\[(.*?)\]\{(.*?)\}/g,a,d=0,h=[];for(;(a=s.exec(t))!==null;){a.index>d&&h.push(document.createTextNode(t.slice(d,a.index)));let[g,y,n]=a,i=document.createElement("span");i.classList.add("hover-reveal-container");let S=document.createElement("span");S.classList.add("hover-reveal"),S.textContent=y;let c=document.createElement("div");c.classList.add("hover-reveal-tooltip"),p.MarkdownRenderer.render(this.app,n,c,"",this),S.appendChild(c),i.appendChild(S),i.addEventListener("mouseover",()=>{let x=c.getBoundingClientRect();if(x.width===0)return;let f=document.querySelector(".workspace-split.mod-vertical.mod-root");if(!f)return;let B=f.getBoundingClientRect(),P=B.left,V=B.right;x.left<P?(c.style.left="0",c.style.transform="translateX(0)"):x.right>V&&(c.style.left="auto",c.style.right="0",c.style.transform="translateX(0)")}),i.addEventListener("mouseout",x=>{let f=x.relatedTarget;f&&c.contains(f)||(c.style.visibility="hidden",c.style.opacity="0",setTimeout(()=>{c.style.left="50%",c.style.right="auto",c.style.transform="translateX(-50%)",c.style.visibility="",c.style.opacity=""},200))}),h.push(i),d=a.index+g.length}if(d<t.length&&h.push(document.createTextNode(t.slice(d))),h.length>0&&o.parentNode){let g=document.createDocumentFragment();h.forEach(y=>g.appendChild(y)),o.parentNode.replaceChild(g,o)}})}),this.registerEditorExtension(this.hoverRevealExtension())}onunload(){let e=document.getElementById("hover-reveal-custom-styles");e&&e.remove()}async loadSettings(){this.settings=Object.assign({},b,await this.loadData())}async saveSettings(){await this.saveData(this.settings)}hoverRevealExtension(){let e=this;class l extends T.WidgetType{constructor(o,t,s,a,d,h){super();this.visibleText=o;this.tooltipText=t;this.from=s;this.to=a;this.view=d;this.isActive=h}toDOM(){let o=document.createElement("span");if(this.isActive)o.textContent=`[${this.visibleText}]{${this.tooltipText}}`;else{o.classList.add("hover-reveal");let t=document.createElement("span");p.MarkdownRenderer.render(e.app,this.visibleText,t,"",e).then(()=>{var d;let a=((d=t.querySelector("p"))==null?void 0:d.innerHTML)||this.visibleText;t.innerHTML=a}),o.appendChild(t);let s=document.createElement("div");s.classList.add("hover-reveal-tooltip"),p.MarkdownRenderer.render(e.app,this.tooltipText,s,"",e),o.appendChild(s)}return o.addEventListener("mouseover",()=>{let t=o.querySelector(".hover-reveal-tooltip");if(!t)return;let s=t.getBoundingClientRect();if(s.width===0)return;let a=document.querySelector(".workspace-split.mod-vertical.mod-root");if(!a)return;let d=a.getBoundingClientRect(),h=d.left,g=d.right;s.left<h?(t.style.left="0",t.style.transform="translateX(0)"):s.right>g&&(t.style.left="auto",t.style.right="0",t.style.transform="translateX(0)"),t.addEventListener("mouseout",y=>{let n=y.relatedTarget;n&&o.contains(n)||(t.style.visibility="hidden",t.style.opacity="0",setTimeout(()=>{t.style.left="50%",t.style.right="auto",t.style.transform="translateX(-50%)",t.style.visibility="",t.style.opacity=""},200))})}),o.addEventListener("mouseout",t=>{let s=o.querySelector(".hover-reveal-tooltip");if(!s)return;let a=t.relatedTarget;a&&s.contains(a)||(s.style.visibility="hidden",s.style.opacity="0",setTimeout(()=>{s.style.left="50%",s.style.right="auto",s.style.transform="translateX(-50%)",s.style.visibility="",s.style.opacity=""},200))}),o}eq(o){return o.visibleText===this.visibleText&&o.tooltipText===this.tooltipText&&o.from===this.from&&o.to===this.to&&o.isActive===this.isActive}}return[T.ViewPlugin.fromClass(class{constructor(r){this.decorations=this.buildDecorations(r)}update(r){(r.docChanged||r.viewportChanged||r.selectionSet)&&(this.decorations=this.buildDecorations(r.view))}buildDecorations(r){let m=[],o=r.state.doc.toString(),t=/\[(.*?)\]\{(.*?)\}/g,s;for(;(s=t.exec(o))!==null;){let[a,d,h]=s,g=s.index,y=g+a.length,n=r.state.selection.main.from;n>=g&&n<=y||m.push(T.Decoration.replace({widget:new l(d,h,g,y,r,!1),inclusive:!0}).range(g,y))}return T.Decoration.set(m)}},{decorations:r=>r.decorations})]}updateStyles(){let e=document.createElement("style");e.id="hover-reveal-custom-styles",e.textContent=`
			.hover-reveal-tooltip {
				color: ${this.settings.tooltipTextColor} !important;
				background-color: ${this.settings.tooltipBackgroundColor} !important;
				border-color: ${this.settings.tooltipBorderColor} !important;
			}
			.hover-reveal-tooltip::after {
				border-top-color: ${this.settings.tooltipBackgroundColor} !important;
			}
			.hover-reveal {
				color: ${this.settings.boldTextColor} !important;
			}
		`;let l=document.getElementById("hover-reveal-custom-styles");l&&l.remove(),document.head.appendChild(e)}},k=class extends p.PluginSettingTab{constructor(e,l){super(e,l);this.plugin=l}getComputedColor(e){var r;let l=document.createElement("div");document.body.appendChild(l),l.style.color=e;let u=getComputedStyle(l).color;if(document.body.removeChild(l),u.startsWith("rgb")){let[m,o,t]=((r=u.match(/\d+/g))==null?void 0:r.map(Number))||[0,0,0];return`#${m.toString(16).padStart(2,"0")}${o.toString(16).padStart(2,"0")}${t.toString(16).padStart(2,"0")}`}return u||e}display(){let{containerEl:e}=this;e.empty(),new p.Setting(e).setName("Reset settings").setDesc("Reset all settings to default values").addButton(n=>n.setButtonText("Reset").onClick(async()=>{this.plugin.settings.tooltipTextColor=b.tooltipTextColor,this.plugin.settings.tooltipBackgroundColor=b.tooltipBackgroundColor,this.plugin.settings.tooltipBorderColor=b.tooltipBorderColor,this.plugin.settings.boldTextColor=b.boldTextColor,await this.plugin.saveSettings(),this.display(),this.plugin.updateStyles(),new p.Notice("Reset settings to default")}));let l,u,r=this.getComputedColor(this.plugin.settings.tooltipTextColor);new p.Setting(e).setName("Tooltip text color").setDesc("Set the text color of the tooltip").addText(n=>(l=n.setPlaceholder("var(--text-normal)").setValue(r).onChange(async i=>{this.plugin.settings.tooltipTextColor=i,u.setValue(i),await this.plugin.saveSettings(),this.plugin.updateStyles()}),l)).addColorPicker(n=>(u=n.setValue(r).onChange(async i=>{this.plugin.settings.tooltipTextColor=i,l.setValue(i),await this.plugin.saveSettings(),this.plugin.updateStyles()}),u));let m,o,t=this.getComputedColor(this.plugin.settings.tooltipBackgroundColor);new p.Setting(e).setName("Tooltip background color").setDesc("Set the background color of the tooltip").addText(n=>(m=n.setPlaceholder("var(--background-primary)").setValue(t).onChange(async i=>{this.plugin.settings.tooltipBackgroundColor=i,o.setValue(i),await this.plugin.saveSettings(),this.plugin.updateStyles()}),m)).addColorPicker(n=>(o=n.setValue(t).onChange(async i=>{this.plugin.settings.tooltipBackgroundColor=i,m.setValue(i),await this.plugin.saveSettings(),this.plugin.updateStyles()}),o));let s,a,d=this.getComputedColor(this.plugin.settings.tooltipBorderColor);new p.Setting(e).setName("Tooltip border color").setDesc("Set the border color of the tooltip").addText(n=>(s=n.setPlaceholder("var(--background-modifier-border)").setValue(d).onChange(async i=>{this.plugin.settings.tooltipBorderColor=i,a.setValue(i),await this.plugin.saveSettings(),this.plugin.updateStyles()}),s)).addColorPicker(n=>(a=n.setValue(d).onChange(async i=>{this.plugin.settings.tooltipBorderColor=i,s.setValue(i),await this.plugin.saveSettings(),this.plugin.updateStyles()}),a));let h,g,y=this.getComputedColor(this.plugin.settings.boldTextColor);new p.Setting(e).setName("Bold text color").setDesc("Set the color of the bold text").addText(n=>(h=n.setPlaceholder("var(--bold-color)").setValue(y).onChange(async i=>{this.plugin.settings.boldTextColor=i,g.setValue(i),await this.plugin.saveSettings(),this.plugin.updateStyles()}),h)).addColorPicker(n=>(g=n.setValue(y).onChange(async i=>{this.plugin.settings.boldTextColor=i,h.setValue(i),await this.plugin.saveSettings(),this.plugin.updateStyles()}),g))}};

/* nosourcemap */